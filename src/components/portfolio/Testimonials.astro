---
import Container from '../ui/Container.astro';

export interface Props {
  testimonials?: Array<{
    id: string;
    name: string;
    role: string;
    company: string;
    content: string;
    avatar: string;
    rating?: number;
  }>;
}

const { testimonials = [] } = Astro.props;

const defaultTestimonials = [
  {
    id: "testimonial-1",
    name: "Sarah Johnson",
    role: "CEO",
    company: "TechStart Inc.",
    content: "Working with John was an absolute pleasure. He delivered exceptional results on time and exceeded our expectations. His attention to detail and technical expertise are unmatched.",
    avatar: "/111.jpg",
    rating: 5
  },
  {
    id: "testimonial-2", 
    name: "Michael Chen",
    role: "Product Manager",
    company: "InnovateLab",
    content: "John's ability to translate complex requirements into elegant solutions is remarkable. He's not just a developer, but a true problem solver who cares about the end user experience.",
    avatar: "/111.jpg",
    rating: 5
  },
  {
    id: "testimonial-3",
    name: "Emily Rodriguez",
    role: "Design Director", 
    company: "Creative Studio",
    content: "John seamlessly bridges the gap between design and development. His code is clean, maintainable, and always pixel-perfect. A true professional who delivers quality work consistently.",
    avatar: "/111.jpg",
    rating: 5
  }
];

const testimonialList = testimonials.length > 0 ? testimonials : defaultTestimonials;
---

<section class="testimonials section">
  <Container>
    <div class="section-header">
      <h2 class="section-title">What Clients Say</h2>
      <p class="section-description">
        Don't just take my word for it - here's what my clients have to say about working with me
      </p>
    </div>
    
    <div class="testimonials-grid grid grid-3">
      {testimonialList.map((testimonial) => (
        <div class="testimonial-card card">
          <div class="testimonial-content">
            {testimonial.rating && (
              <div class="testimonial-rating">
                {Array.from({ length: 5 }, (_, i) => (
                  <svg 
                    class={`star ${i < (testimonial.rating ?? 0) ? 'filled' : ''}`}
                    width="16" 
                    height="16" 
                    viewBox="0 0 24 24" 
                    fill="currentColor"
                  >
                    <path d="M12 2l3.09 6.26L22 9.27l-5 4.87 1.18 6.88L12 17.77l-6.18 3.25L7 14.14 2 9.27l6.91-1.01L12 2z"/>
                  </svg>
                ))}
              </div>
            )}
            
            <blockquote class="testimonial-text">
              "{testimonial.content}"
            </blockquote>
          </div>
          
          <div class="testimonial-author">
            <img src={testimonial.avatar} alt={testimonial.name} class="author-avatar" />
            <div class="author-info">
              <h4 class="author-name">{testimonial.name}</h4>
              <p class="author-role">{testimonial.role} at {testimonial.company}</p>
            </div>
          </div>
        </div>
      ))}
    </div>
  </div>
</section>

<style>
  .testimonials {
    background-color: var(--color-primary);
  }

  .section-header {
    text-align: center;
    margin-bottom: var(--spacing-3xl);
  }

  .section-title {
    font-size: var(--font-size-4xl);
    font-weight: 700;
    color: var(--color-text);
    margin-bottom: var(--spacing-md);
  }

  .section-description {
    font-size: var(--font-size-lg);
    color: var(--color-text-muted);
    max-width: 600px;
    margin: 0 auto;
  }

  .testimonials-grid {
    display: grid;
    grid-template-columns: repeat(3, 1fr);
    gap: var(--spacing-xl);
  }

  .testimonial-card {
    background-color: var(--color-background);
    border: 1px solid var(--color-border);
    border-radius: var(--border-radius-lg);
    padding: var(--spacing-xl);
    box-shadow: var(--shadow-sm);
    display: flex;
    flex-direction: column;
    justify-content: space-between;
  }

  .testimonial-card:hover {
    box-shadow: var(--shadow-lg);
    border-color: var(--color-primary);
  }

  .testimonial-content {
    margin-bottom: var(--spacing-lg);
  }

  .testimonial-rating {
    display: flex;
    gap: var(--spacing-xs);
    margin-bottom: var(--spacing-md);
  }

  .star {
    color: var(--color-border);
  }

  .star.filled {
    color: #fbbf24;
  }

  .testimonial-text {
    font-size: var(--font-size-base);
    line-height: 1.6;
    color: var(--color-text-muted);
    font-style: italic;
    margin: 0;
  }

  .testimonial-author {
    display: flex;
    align-items: center;
    gap: var(--spacing-md);
  }

  .author-avatar {
    width: 48px;
    height: 48px;
    border-radius: 50%;
    object-fit: cover;
  }

  .author-name {
    font-size: var(--font-size-base);
    font-weight: 600;
    color: var(--color-text);
    margin-bottom: var(--spacing-xs);
  }

  .author-role {
    font-size: var(--font-size-sm);
    color: var(--color-text-muted);
  }

  @media (max-width: 768px) {
    .testimonials-grid {
      grid-template-columns: 1fr;
    }
  }

  @media (min-width: 769px) and (max-width: 1024px) {
    .testimonials-grid {
      grid-template-columns: repeat(2, 1fr);
    }
  }
</style>