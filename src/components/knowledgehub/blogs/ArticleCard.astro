---
// src/components/ArticleCard.astro
export interface Props {
  title: string;
  description?: string;
  image?: string;
  publishedAt?: string;
  author?: string;
  slug: string;
  tags?: string[];
  readTime?: number;
  featured?: boolean;
}

const { 
  title, 
  description, 
  image, 
  publishedAt, 
  author, 
  slug, 
  tags, 
  readTime,
  featured = false 
} = Astro.props;

// Format date
const formatDate = (dateString: string) => {
  const date = new Date(dateString);
  return date.toLocaleDateString('th-TH', {
    year: 'numeric',
    month: 'short',
    day: 'numeric'
  });
};

// Generate read time if not provided
const estimatedReadTime = readTime || Math.max(1, Math.ceil((description?.length || 0) / 200));
---

<article class={`article-card ${featured ? 'featured' : ''}`}>
  <div class="card-image">
    <a href={`/blog/${slug}`} class="image-link">
      {image ? (
        <img 
          src={image} 
          alt={title}
          loading="lazy"
          class="card-img"
        />
      ) : (
        <div class="placeholder-image">
          <span class="placeholder-icon">üìñ</span>
        </div>
      )}
    </a>
    
    {featured && (
      <div class="featured-badge">
        <span class="badge-icon">‚≠ê</span>
        <span class="badge-text">Featured</span>
      </div>
    )}
    
    {tags && tags.length > 0 && (
      <div class="card-tags">
        {tags.slice(0, 2).map((tag) => (
          <span class="card-tag">{tag}</span>
        ))}
      </div>
    )}
  </div>

  <div class="card-content">
    <div class="card-meta">
      {publishedAt && (
        <time class="publish-date" datetime={publishedAt}>
          {formatDate(publishedAt)}
        </time>
      )}
      
      <div class="meta-divider">‚Ä¢</div>
      
      <span class="read-time">
        {estimatedReadTime} min read
      </span>
    </div>

    <h3 class="card-title">
      <a href={`/blog/${slug}`} class="title-link">
        {title}
      </a>
    </h3>

    {description && (
      <p class="card-description">
        {description}
      </p>
    )}

    <div class="card-footer">
      {author && (
        <div class="author-info">
          <div class="author-avatar">
            <span class="avatar-icon">‚úçÔ∏è</span>
          </div>
          <span class="author-name">{author}</span>
        </div>
      )}
      
      <a href={`/blog/${slug}`} class="read-more">
        Read more
        <span class="arrow">‚Üí</span>
      </a>
    </div>
  </div>
</article>

<style>
  .article-card {
    background-color: white;
    border-radius: var(--border-radius-md);
    overflow: hidden;
    box-shadow: 0 2px 10px rgba(0, 0, 0, 0.1);
    transition: all 0.3s ease;
    position: relative;
    height: 100%;
    display: flex;
    flex-direction: column;
  }

  .article-card:hover {
    transform: translateY(-8px);
    box-shadow: 0 8px 25px rgba(0, 0, 0, 0.15);
  }

  .article-card.featured {
    border: 2px solid var(--color-primary-light);
    background: linear-gradient(135deg, var(--color-primary) 0%, white 100%);
  }

  .card-image {
    position: relative;
    overflow: hidden;
    aspect-ratio: 16/9;
  }

  .image-link {
    display: block;
    width: 100%;
    height: 100%;
  }

  .card-img {
    width: 100%;
    height: 100%;
    object-fit: cover;
    transition: transform 0.3s ease;
  }

  .article-card:hover .card-img {
    transform: scale(1.05);
  }

  .placeholder-image {
    width: 100%;
    height: 100%;
    background: linear-gradient(135deg, var(--color-primary) 0%, var(--color-primary-light) 100%);
    display: flex;
    align-items: center;
    justify-content: center;
  }

  .placeholder-icon {
    font-size: 48px;
    opacity: 0.7;
  }

  .featured-badge {
    position: absolute;
    top: 16px;
    left: 16px;
    background-color: var(--color-accent);
    color: white;
    padding: 8px 12px;
    border-radius: 20px;
    font-size: 12px;
    font-weight: 600;
    display: flex;
    align-items: center;
    gap: 4px;
    z-index: 2;
  }

  .card-tags {
    position: absolute;
    bottom: 16px;
    left: 16px;
    display: flex;
    gap: 8px;
    z-index: 2;
  }

  .card-tag {
    background-color: rgba(255, 255, 255, 0.9);
    color: var(--color-primary-dark);
    padding: 6px 12px;
    border-radius: 16px;
    font-size: 12px;
    font-weight: 500;
    backdrop-filter: blur(10px);
  }

  .card-content {
    padding: 24px;
    flex-grow: 1;
    display: flex;
    flex-direction: column;
  }

  .card-meta {
    display: flex;
    align-items: center;
    gap: 8px;
    margin-bottom: 16px;
    font-size: 14px;
    color: var(--color-primary-light);
  }

  .publish-date {
    color: var(--color-primary-light);
  }

  .meta-divider {
    color: var(--color-border);
  }

  .read-time {
    color: var(--color-primary-light);
  }

  .card-title {
    margin-bottom: 12px;
    font-size: 20px;
    line-height: 1.4;
    font-weight: 600;
  }

  .title-link {
    color: var(--color-primary-dark);
    text-decoration: none;
    transition: color 0.3s ease;
  }

  .title-link:hover {
    color: var(--color-accent);
  }

  .card-description {
    color: var(--color-text);
    line-height: 1.6;
    margin-bottom: 20px;
    flex-grow: 1;
    font-size: 16px;
    opacity: 0.8;
  }

  .card-footer {
    display: flex;
    justify-content: space-between;
    align-items: center;
    margin-top: auto;
    padding-top: 16px;
    border-top: 1px solid var(--color-border);
  }

  .author-info {
    display: flex;
    align-items: center;
    gap: 8px;
  }

  .author-avatar {
    width: 32px;
    height: 32px;
    border-radius: 50%;
    background-color: var(--color-primary);
    display: flex;
    align-items: center;
    justify-content: center;
    font-size: 16px;
  }

  .author-name {
    font-size: 14px;
    color: var(--color-primary-dark);
    font-weight: 500;
  }

  .read-more {
    color: var(--color-primary-dark);
    text-decoration: none;
    font-weight: 500;
    font-size: 14px;
    display: flex;
    align-items: center;
    gap: 4px;
    transition: all 0.3s ease;
  }

  .read-more:hover {
    color: var(--color-accent);
    transform: translateX(4px);
  }

  .arrow {
    transition: transform 0.3s ease;
  }

  .read-more:hover .arrow {
    transform: translateX(4px);
  }

  /* Mobile Responsive */
  @media (max-width: 768px) {
    .card-content {
      padding: 20px;
    }

    .card-title {
      font-size: 18px;
    }

    .card-description {
      font-size: 14px;
    }

    .card-footer {
      flex-direction: column;
      gap: 12px;
      align-items: flex-start;
    }

    .read-more {
      align-self: flex-end;
    }
  }

  @media (max-width: 480px) {
    .card-content {
      padding: 16px;
    }

    .card-title {
      font-size: 16px;
    }

    .featured-badge {
      top: 12px;
      left: 12px;
      padding: 6px 10px;
      font-size: 10px;
    }

    .card-tags {
      bottom: 12px;
      left: 12px;
    }

    .card-tag {
      padding: 4px 8px;
      font-size: 10px;
    }
  }
</style>