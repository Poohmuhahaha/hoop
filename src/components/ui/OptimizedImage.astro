---
// src/components/ui/OptimizedImage.astro

import { Image } from 'astro:assets';

export interface Props {
  src: string;
  alt: string;
  width?: number;
  height?: number;
  quality?: number;
  format?: 'webp' | 'avif' | 'jpeg' | 'png';
  loading?: 'lazy' | 'eager';
  class?: string;
  sizes?: string;
  densities?: number[];
  placeholder?: 'blur' | 'none';
}

const {
  src,
  alt,
  width = 800,
  height = 600,
  quality = 80,
  format = 'webp',
  loading = 'lazy',
  class: className = '',
  sizes = '(max-width: 768px) 100vw, (max-width: 1200px) 50vw, 33vw',
  densities = [1, 2],
  placeholder = 'blur'
} = Astro.props;

// Check if image is external
const isExternal = src.startsWith('http://') || src.startsWith('https://');
---

{isExternal ? (
  <img 
    src={src} 
    alt={alt}
    width={width}
    height={height}
    loading={loading}
    class={`optimized-image ${className}`}
    sizes={sizes}
  />
) : (
  <Image
    src={src}
    alt={alt}
    width={width}
    height={height}
    quality={quality}
    format={format}
    loading={loading}
    class={`optimized-image ${className}`}
    sizes={sizes}
    densities={densities}
  />
)}

<style>
  .optimized-image {
    transition: opacity 0.3s ease;
    border-radius: 8px;
  }
  
  .optimized-image[loading="lazy"] {
    opacity: 0;
    animation: fadeIn 0.3s ease forwards;
  }
  
  @keyframes fadeIn {
    to {
      opacity: 1;
    }
  }
  
  /* Responsive image styles */
  .optimized-image {
    width: 100%;
    height: auto;
    object-fit: cover;
  }
  
  /* Blur placeholder effect */
  .optimized-image::before {
    content: '';
    position: absolute;
    top: 0;
    left: 0;
    right: 0;
    bottom: 0;
    background: linear-gradient(90deg, #f0f0f0 25%, transparent 37%, #f0f0f0 63%);
    animation: shimmer 1.5s infinite;
    z-index: -1;
  }
  
  @keyframes shimmer {
    0% { transform: translateX(-100%); }
    100% { transform: translateX(100%); }
  }
</style>